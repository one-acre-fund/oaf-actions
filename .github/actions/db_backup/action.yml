name: Trigger Jenkins Job for PostgreSQL Database Backup
description: A GitHub Action to automate the triggering of a Jenkins job for backing up PostgreSQL databases. This action initiates the backup process by interacting with Jenkins, using provided credentials and database details.

# Define inputs for the Action
inputs:
  JENKINS_URL:
    description: 'The URL of the Jenkins job to trigger.'
    default: 'https://jenkins.oneacrefund.org/'
    required: true
  JENKINS_JOB_NAME:
    description: 'The name of the Jenkins job to trigger.'
    default: 'Database Jobs/Backup Postgres Database Manual'
    required: true
  JENKINS_USERNAME:
    description: 'The username to authenticate with Jenkins.'
    required: true
  JENKINS_TOKEN:
    description: 'The PAT (Personal Access Token) to authenticate with Jenkins.'
    required: true
  POSTGRES_DATABASE_HOST:
    description: 'Host of the PostgreSQL server.'
    required: true
  POSTGRES_DATABASE_USER:
    description: 'PostgreSQL user for the Jenkins job.'
    required: true
  POSTGRES_DATABASE_PASSWORD:
    description: 'PostgreSQL password for the Jenkins job.'
    required: true
  DATABASES:
    description: 'Comma-separated list of databases to back up.'
    required: true
  WAIT_TIMEOUT:
    description: 'Timeout in minutes for waiting for Jenkins job to complete.'
    required: false
    default: '3600'

runs:
  using: "composite"
  steps:
    - name: Trigger Manual Backup of PostgreSQL Database
      uses: toptal/jenkins-job-trigger-action@master
      with:
        jenkins_url: "${{ inputs.JENKINS_URL }}"
        jenkins_user: "${{ inputs.JENKINS_USERNAME }}"
        jenkins_token: "${{ inputs.JENKINS_TOKEN }}"
        job_name: "${{ inputs.JENKINS_JOB_NAME }}"
        job_params: |
          {
            "HOST": ${{ inputs.POSTGRES_DATABASE_HOST }},
            "POSTGRES_USER": ${{ inputs.POSTGRES_DATABASE_USER }},
            "POSTGRES_PASSWORD": ${{ inputs.POSTGRES_DATABASE_PASSWORD }},
            "DATABASES": ${{ inputs.DATABASES }},
            "REMOTE_BUILD_USER": "Remotely triggered (IT Devs)"
          }
        job_timeout: "${{ inputs.WAIT_TIMEOUT }}"

