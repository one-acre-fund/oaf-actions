name: Report Deployment Status
description: GitHub Action to report deployment status to the CI repository.
inputs:
  OWNER:
    description: 'The owner of the CI repository.'
    required: true
  REPOSITORY:
    description: 'The name of the CI repository.'
    required: true
  RUN_ID:
    description: 'The ID of the CD deployment.'
    required: true
  REF:
    description: 'The branch name that was deployed.'
    required: true
  DEPLOYMENT_ENVIRONMENT:
    description: 'The environment to deploy the CI pipeline to.'
    required: true
  REQUIRED_CONTEXTS:
    description: 'The required contexts for the deployment to be successful.'
    required: true
  STATE:
    description: 'The state of the deployment.'
    required: true

runs:
  using: composite
  steps:
    - name: Create GitHub Deployment
      uses: actions/github-script@v7.0.1
      with:
        script: |
          const { data: workflow_run } = await github.rest.actions.listJobsForWorkflowRun({
            owner: "${{ inputs.OWNER }}",
            repo: "${{ inputs.REPOSITORY }}",
            run_id: ${{ inputs.RUN_ID }}
          });

          const { data: deployment } = await github.rest.repos.createDeployment({
            owner: "${{ inputs.OWNER }}",
            repo: "${{ inputs.REPOSITORY }}",
            ref: "${{ inputs.REF }}",
            environment: "${{ inputs.DEPLOYMENT_ENVIRONMENT }}",
            transient_environment: false,
            auto_merge: false,
            required_contexts: ${{ inputs.REQUIRED_CONTEXTS }}
          });

          const { data: deployment_status } = await github.rest.repos.createDeploymentStatus({
            owner: "${{ inputs.OWNER }}",
            repo: "${{ inputs.REPOSITORY }}",
            deployment_id: deployment.id,
            state: "${{ inputs.STATE }}",
            target_url: workflow_run.jobs.find(job => job.status === 'in_progress').html_url,
            log_url: workflow_run.jobs.find(job => job.status === 'in_progress').html_url
          });
